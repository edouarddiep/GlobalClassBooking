/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import base.CoachDAO;
import base.CoursDAO;
import base.UtilisateurDAO;
import domaine.Club;
import domaine.Coach;
import domaine.Cours;
import domaine.Utilisateur;
import java.awt.Color;
import java.awt.Component;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author Edouard Diep
 */
public class FrmLstCours extends javax.swing.JFrame {

    private FrmMainMenuAdmin frmMainAdmin;
    private FrmMainMenuUser frmMainUser;
    private Frame p;
    private boolean isRememberChecked;
    private static final String TXT_BTN_ENREGISTRER = "Enregistrer";
    private static final String TXT_BIENVENUE = "Bienvenue ";
    private static final String TXT_BTN_MODIFIER = "Modifier le cours sélectionné";
    private static final String TXT_ERROR_BOOKED = "Vous avez déjà réservé le cours ";
    private static final String TXT_NULL_SELECT = "Veuillez sélectionner un cours dans la liste !";
    SimpleDateFormat sdf = new SimpleDateFormat("DD.MM.YYYY");

    private static Utilisateur uCourant; // récupèration de l'utilisateur courant actuellement connecté à l'application
    private static Club cCourant; // récupèration du club courant actuellement sélectionné pour afficher la liste des cours

    private static ArrayList<Cours> cours;
    private static ArrayList<Coach> lstCoachs;

    /**
     * Creates new form FrmLstCoursFrame
     */
    public FrmLstCours(java.awt.Frame parent, Utilisateur u, Club c) throws SQLException, ParseException {
        initComponents();
        uCourant = u;
        cCourant = c;
        setStartUpConfig(); // setter de la configuration initiale lors de l'ouverture de la fenêtre de l'application
        loadCours();
        loadCoachs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitre = new javax.swing.JLabel();
        lstCoursParent = new javax.swing.JScrollPane();
        lstCours = new javax.swing.JList<>();
        lblConfirmation = new javax.swing.JLabel();
        btnDeconnexion = new javax.swing.JButton();
        lblBienvenueUser = new javax.swing.JLabel();
        btnEnregistrer = new javax.swing.JButton();
        lblCoursCoachDispo = new javax.swing.JLabel();
        btnModifier = new javax.swing.JButton();
        btnRetourMainMenu = new javax.swing.JButton();
        pnlModificationCours = new javax.swing.JPanel();
        lblNomCours = new javax.swing.JLabel();
        lblNomCoach = new javax.swing.JLabel();
        lblHeureCours = new javax.swing.JLabel();
        tfHeureCours = new javax.swing.JTextField();
        tfNomCours = new javax.swing.JTextField();
        tfNomCoach = new javax.swing.JTextField();
        btnReserver = new javax.swing.JButton();
        chkRemember = new javax.swing.JCheckBox();
        imgBackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Consultation des cours");
        setFocusTraversalPolicy(new MyFocusTraversalPolicy(new Component[]{lblBienvenueUser, btnDeconnexion, lblTitre, lstCours, btnReserver, btnRetourMainMenu})
        );
        setLocation(new java.awt.Point(600, 300));
        setMaximumSize(new java.awt.Dimension(912, 535));
        setMinimumSize(new java.awt.Dimension(912, 535));
        setPreferredSize(new java.awt.Dimension(912, 535));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        lblTitre.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        lblTitre.setForeground(new java.awt.Color(255, 255, 255));
        lblTitre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitre.setText("Merci d'avoir choisi le club : ");
        getContentPane().add(lblTitre);
        lblTitre.setBounds(50, 30, 740, 30);

        lstCoursParent.setOpaque(false);

        lstCours.setToolTipText("Liste des cours");
        lstCours.setOpaque(false);
        lstCours.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCoursValueChanged(evt);
            }
        });
        lstCoursParent.setViewportView(lstCours);

        getContentPane().add(lstCoursParent);
        lstCoursParent.setBounds(220, 150, 460, 260);

        lblConfirmation.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        lblConfirmation.setForeground(new java.awt.Color(0, 255, 255));
        lblConfirmation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblConfirmation);
        lblConfirmation.setBounds(60, 450, 790, 30);

        btnDeconnexion.setText("Se déconnecter");
        btnDeconnexion.setToolTipText("Se déconnecter de l'application");
        btnDeconnexion.setBorder(null);
        btnDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeconnexionActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeconnexion);
        btnDeconnexion.setBounds(7, 27, 100, 20);

        lblBienvenueUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBienvenueUser.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(lblBienvenueUser);
        lblBienvenueUser.setBounds(10, 0, 480, 30);

        btnEnregistrer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEnregistrer.setText("Enregistrer");
        btnEnregistrer.setToolTipText("Valider les modifications");
        btnEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnregistrerActionPerformed(evt);
            }
        });
        getContentPane().add(btnEnregistrer);
        btnEnregistrer.setBounds(770, 410, 110, 40);

        lblCoursCoachDispo.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        lblCoursCoachDispo.setForeground(new java.awt.Color(255, 255, 255));
        lblCoursCoachDispo.setText("Voici la liste des cours et leurs coachs disponibles :");
        getContentPane().add(lblCoursCoachDispo);
        lblCoursCoachDispo.setBounds(210, 110, 490, 30);

        btnModifier.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnModifier.setText("Modifier le cours sélectionné");
        btnModifier.setToolTipText("Modifier le cours sélectionné");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });
        getContentPane().add(btnModifier);
        btnModifier.setBounds(470, 410, 210, 40);

        btnRetourMainMenu.setText("Retour au menu principal");
        btnRetourMainMenu.setToolTipText("Retour au menu principal");
        btnRetourMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourMainMenuActionPerformed(evt);
            }
        });
        getContentPane().add(btnRetourMainMenu);
        btnRetourMainMenu.setBounds(10, 480, 170, 23);

        pnlModificationCours.setFocusTraversalPolicy(new MyFocusTraversalPolicy(new Component[]{tfNomCours, tfNomCoach, tfHeureCours, btnEnregistrer})
        );
        pnlModificationCours.setLayout(null);

        lblNomCours.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        lblNomCours.setForeground(new java.awt.Color(0, 0, 204));
        lblNomCours.setText("Nom du cours :");
        lblNomCours.setToolTipText("");
        pnlModificationCours.add(lblNomCours);
        lblNomCours.setBounds(10, 10, 120, 20);

        lblNomCoach.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        lblNomCoach.setForeground(new java.awt.Color(0, 0, 204));
        lblNomCoach.setText("Coach affilié :");
        lblNomCoach.setToolTipText("");
        pnlModificationCours.add(lblNomCoach);
        lblNomCoach.setBounds(10, 70, 120, 20);

        lblHeureCours.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        lblHeureCours.setForeground(new java.awt.Color(0, 0, 204));
        lblHeureCours.setText("Heure du cours :");
        lblHeureCours.setToolTipText("");
        pnlModificationCours.add(lblHeureCours);
        lblHeureCours.setBounds(10, 130, 120, 20);

        tfHeureCours.setEditable(false);
        tfHeureCours.setToolTipText("Heure du cours");
        pnlModificationCours.add(tfHeureCours);
        tfHeureCours.setBounds(10, 150, 150, 30);

        tfNomCours.setEditable(false);
        tfNomCours.setToolTipText("Nom du cours");
        pnlModificationCours.add(tfNomCours);
        tfNomCours.setBounds(10, 30, 150, 30);

        tfNomCoach.setEditable(false);
        tfNomCoach.setToolTipText("Nom du coach");
        pnlModificationCours.add(tfNomCoach);
        tfNomCoach.setBounds(10, 90, 150, 30);

        getContentPane().add(pnlModificationCours);
        pnlModificationCours.setBounds(690, 150, 190, 260);

        btnReserver.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReserver.setText("Réserver un cours");
        btnReserver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReserverActionPerformed(evt);
            }
        });
        getContentPane().add(btnReserver);
        btnReserver.setBounds(520, 410, 160, 40);
        getContentPane().add(chkRemember);
        chkRemember.setBounds(740, 10, 0, 0);

        imgBackGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg_frmLstCours.png"))); // NOI18N
        getContentPane().add(imgBackGround);
        imgBackGround.setBounds(0, 0, 910, 510);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstCoursValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCoursValueChanged
        if(lstCours.getSelectedIndex() == -1){
            return;
        }
        Cours c = cours.get(lstCours.getSelectedIndex());
        tfNomCours.setText(c.getNom());
        tfNomCoach.setText(String.valueOf(c.getCoach()));
        tfHeureCours.setText(c.getHoraire());
    }//GEN-LAST:event_lstCoursValueChanged

    private void btnDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeconnexionActionPerformed
        try {
            FrmLogin frmLogin = new FrmLogin();
            if (getRememberState() == true) {
                frmLogin.setUser(uCourant.getUsername());
                frmLogin.setPass(uCourant.getPassword());
            }
            frmLogin.setRememberState(getRememberState());
            frmLogin.setVisible(true);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        this.dispose();
    }//GEN-LAST:event_btnDeconnexionActionPerformed

    private void btnEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnregistrerActionPerformed
        setComponentsState(true, false, false, evt);
        Cours ancienCours = cours.get(lstCours.getSelectedIndex());
        int pos = lstCours.getSelectedIndex();
        DefaultListModel model = new DefaultListModel(); // je passe par une DefaultListModel afin d'y ajouter des éléments dans ma JList
        lstCours.setModel(model);
        String[] str = tfNomCoach.getText().split(" ");
        Coach coach = new Coach(str[1], str[0]);
        lstCoachs.add(coach);
        Cours nouveauCours = new Cours(ancienCours.getNo(), tfNomCours.getText(), coach, ancienCours.getDateCours(), tfHeureCours.getText());
        cours.remove(ancienCours);
        model.removeElement(ancienCours);
        cours.add(nouveauCours);
        model.addElement(nouveauCours);
        try {
            CoursDAO.updateCours(nouveauCours);
            loadCours();
            lstCours.setSelectedIndex(pos);
        } catch (SQLException ex) {
            ex.printStackTrace();
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnEnregistrerActionPerformed

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        btnModifier.setVisible(false);
        btnEnregistrer.setVisible(true);
        tfNomCours.setEnabled(true);
        tfNomCoach.setEnabled(true);
        tfHeureCours.setEnabled(true);
        setComponentsState(false, true, true, evt);
    }//GEN-LAST:event_btnModifierActionPerformed

    private void btnRetourMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourMainMenuActionPerformed
        if (uCourant.getIsAdmin()) {
            if (frmMainAdmin == null) {
                try {
                    frmMainAdmin = new FrmMainMenuAdmin(p, uCourant);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                frmMainAdmin.setVisible(true);
                frmMainAdmin.setRememberState(getRememberState()); // test de la fonction "Se souvenir de moi"
            }
        } else { 
            if (frmMainUser == null) {
                try {
                    frmMainUser = new FrmMainMenuUser(p, uCourant);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                frmMainUser.setVisible(true);
                frmMainUser.setRememberState(getRememberState()); // test de la fonction "Se souvenir de moi"
            }
        }
        this.dispose();
    }//GEN-LAST:event_btnRetourMainMenuActionPerformed

    private void btnReserverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReserverActionPerformed
        Cours c = cours.get(lstCours.getSelectedIndex());
        if (lstCours.getSelectedIndex() == -1) {
            setMsgConfirmation(Color.ORANGE, TXT_NULL_SELECT);
        } else {
            try {
                CoursDAO.insertParticipation(uCourant.getNo(), c.getNo());
            } catch (SQLException ex) {
                setMsgConfirmation(Color.red, TXT_ERROR_BOOKED+c.getNom()+" !");
                return;
            }
            setMsgConfirmation(Color.cyan, "<html> Merci ! Le cours de <font color=white>" + c.toString() + "</font> a bien été réservé !</html>");
            lstCours.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_btnReserverActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        FrmQuit frmQuit = new FrmQuit(this, true, uCourant);
        frmQuit.setPar(this);
        frmQuit.setRememberState(getRememberState());
        frmQuit.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmLstCours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmLstCours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmLstCours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmLstCours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmLstCours(new javax.swing.JFrame(), uCourant, cCourant).setVisible(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                } catch (ParseException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeconnexion;
    private javax.swing.JButton btnEnregistrer;
    private javax.swing.JButton btnModifier;
    private javax.swing.JButton btnReserver;
    private javax.swing.JButton btnRetourMainMenu;
    private javax.swing.JCheckBox chkRemember;
    private javax.swing.JLabel imgBackGround;
    private javax.swing.JLabel lblBienvenueUser;
    private javax.swing.JLabel lblConfirmation;
    private javax.swing.JLabel lblCoursCoachDispo;
    private javax.swing.JLabel lblHeureCours;
    private javax.swing.JLabel lblNomCoach;
    private javax.swing.JLabel lblNomCours;
    private javax.swing.JLabel lblTitre;
    private javax.swing.JList<String> lstCours;
    private javax.swing.JScrollPane lstCoursParent;
    private javax.swing.JPanel pnlModificationCours;
    private javax.swing.JTextField tfHeureCours;
    private javax.swing.JTextField tfNomCoach;
    private javax.swing.JTextField tfNomCours;
    // End of variables declaration//GEN-END:variables

    /**
     * Méthode qui gère la configuration initiale de la fenêtre (celle au
     * chargement de l'application).
     */
    private void setStartUpConfig() {
        if (uCourant.getIsAdmin()) {
            pnlModificationCours.setVisible(true);
            btnReserver.setVisible(false);
            btnModifier.setVisible(true);
            btnEnregistrer.setVisible(false);
            tfNomCours.setEnabled(false);
            tfNomCoach.setEnabled(false);
            tfHeureCours.setEnabled(false);
        } else {
            pnlModificationCours.setVisible(false);
            btnReserver.setVisible(true);
            btnModifier.setVisible(false);
            btnEnregistrer.setVisible(false);
        }
        lblBienvenueUser.setText(TXT_BIENVENUE+uCourant.getUsername());
        lblTitre.setText("<html>Merci d'avoir choisi le club : <font color=yellow>" + cCourant.getNom() + "</font></html>");
    }

    /**
     * Méthode qui gère l'état de divers composants de la fenêtre selon quel
     * bouton est cliqué.
     */
    private void setComponentsState(boolean updateVisible, boolean saveVisible, boolean editable, ActionEvent evt) {
        if (evt.getActionCommand() == TXT_BTN_ENREGISTRER) {
            btnModifier.setVisible(updateVisible);
            btnEnregistrer.setVisible(saveVisible);
            tfNomCours.setEnabled(editable);
            tfNomCoach.setEnabled(editable);
            tfHeureCours.setEnabled(editable);
        } else if (evt.getActionCommand() == TXT_BTN_MODIFIER) {
            btnModifier.setVisible(updateVisible);
            btnEnregistrer.setVisible(saveVisible);
            tfNomCours.setEditable(editable);
            tfNomCoach.setEditable(editable);
            tfHeureCours.setEditable(editable);
        }
    }

    /**
     * Méthode qui affiche un message de confirmation et lui assigne une
     * couleur.
     */
    private void setMsgConfirmation(Color c, String txt) {
        lblConfirmation.setForeground(c);
        lblConfirmation.setText(txt);
    }

    /**
     * Méthode qui gère l'état de la checkbox "chkRemember" pour implanter la
     * fonctionnalité "se souvenir de moi" lors du login de l'utilisateur.
     */
    public void setRememberState(boolean state) {
        this.isRememberChecked = state;
        this.chkRemember.setSelected(state);
    }

    /**
     * Méthode qui retourne l'état de la checkbox "chkRemember".
     */
    public boolean getRememberState() {
        return isRememberChecked;
    }

    /**
     * Méthode qui charge l'ArrayList des cours.
     */
    private void loadCours() throws SQLException, ParseException {
        cours = CoursDAO.getCoursSelonClub(cCourant.getNo());
        DefaultListModel model = new DefaultListModel(); // je passe par une DefaultListModel afin d'y ajouter des éléments dans ma JList
        lstCours.setModel(model);
        for (int i = 0; i < cours.size(); i++) {
            model.addElement(cours.get(i));
        }
        lstCours.setSelectedIndex(0);
    }

    /**
     * Méthode qui charge l'ArrayList des coachs.
     */
    private void loadCoachs() throws SQLException {
        lstCoachs = CoachDAO.getCoachs();
    }

}
