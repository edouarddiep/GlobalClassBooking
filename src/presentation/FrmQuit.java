/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import domaine.Utilisateur;
import java.awt.Component;
import java.awt.Frame;
import java.sql.SQLException;

/**
 *
 * @author Edouard Diep
 */
public class FrmQuit extends javax.swing.JDialog {

    private Frame p;
    private boolean isRememberChecked;
    
    private static Utilisateur uCourant; // récupèration de l'utilisateur courant actuellement connecté à l'application

    /**
     * Creates new form FrmQuit
     */
    public FrmQuit(java.awt.Frame parent, boolean modal, Utilisateur u) {
        super(parent, modal);
        initComponents();
        uCourant = u;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAnnuler = new javax.swing.JButton();
        btnQuitter = new javax.swing.JButton();
        btnDeconnexion = new javax.swing.JButton();
        chkRemember = new javax.swing.JCheckBox();
        pnlBackGround = new javax.swing.JPanel();
        lblTitre = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quitter ?");
        setBackground(new java.awt.Color(255, 0, 0));
        setFocusTraversalPolicy(new MyFocusTraversalPolicy(new Component[]{btnQuitter, btnDeconnexion, btnAnnuler})
        );
        setLocation(new java.awt.Point(800, 300));
        setMaximumSize(new java.awt.Dimension(441, 140));
        setMinimumSize(new java.awt.Dimension(441, 140));
        setName("FrmQuit"); // NOI18N
        setPreferredSize(new java.awt.Dimension(441, 140));
        setResizable(false);
        getContentPane().setLayout(null);

        btnAnnuler.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAnnuler.setText("Annuler");
        btnAnnuler.setToolTipText("Annuler");
        btnAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnulerActionPerformed(evt);
            }
        });
        getContentPane().add(btnAnnuler);
        btnAnnuler.setBounds(320, 60, 110, 30);

        btnQuitter.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnQuitter.setText("Quitter l'application");
        btnQuitter.setToolTipText("Quitte l'application sans sauvegarder les modifications");
        btnQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitterActionPerformed(evt);
            }
        });
        getContentPane().add(btnQuitter);
        btnQuitter.setBounds(10, 60, 150, 30);

        btnDeconnexion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDeconnexion.setText("Me déconnecter");
        btnDeconnexion.setToolTipText("Déconnecte la session en cours et ramène à la page de login");
        btnDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeconnexionActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeconnexion);
        btnDeconnexion.setBounds(170, 60, 140, 30);

        chkRemember.setEnabled(false);
        getContentPane().add(chkRemember);
        chkRemember.setBounds(120, 190, 0, 0);

        pnlBackGround.setBackground(java.awt.Color.lightGray);
        pnlBackGround.setLayout(null);

        lblTitre.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        lblTitre.setForeground(new java.awt.Color(255, 51, 51));
        lblTitre.setText("Quelle action souhaitez-vous effectuer ?");
        lblTitre.setToolTipText("");
        pnlBackGround.add(lblTitre);
        lblTitre.setBounds(46, 5, 347, 25);
        pnlBackGround.add(jLabel1);
        jLabel1.setBounds(0, 0, 440, 110);

        getContentPane().add(pnlBackGround);
        pnlBackGround.setBounds(0, 0, 440, 110);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnulerActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnAnnulerActionPerformed

    private void btnQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitterActionPerformed
        System.exit(0);
        this.dispose();
    }//GEN-LAST:event_btnQuitterActionPerformed

    private void btnDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeconnexionActionPerformed
        try {
            FrmLogin frmLogin = new FrmLogin();
            if (getRememberState() == true) {
                frmLogin.setUser(uCourant.getUsername());
                frmLogin.setPass(uCourant.getPassword());
            }
            frmLogin.setRememberState(getRememberState());
            frmLogin.setVisible(true);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        getPar().dispose();
        this.dispose();
    }//GEN-LAST:event_btnDeconnexionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmQuit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmQuit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmQuit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmQuit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmQuit dialog = new FrmQuit(new javax.swing.JFrame(), true, uCourant);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnnuler;
    private javax.swing.JButton btnDeconnexion;
    private javax.swing.JButton btnQuitter;
    private javax.swing.JCheckBox chkRemember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblTitre;
    private javax.swing.JPanel pnlBackGround;
    // End of variables declaration//GEN-END:variables

    /**
     * Méthode qui set la Frame "parent" reçue en paramètre afin de gérer la
     * fermeture de la fenêtre parent selon si le btnDeconnexion est cliqué ou
     * si le btnQuitter est cliqué.
     */
    public void setPar(Frame parent) {
        p = parent;
    }

    /**
     * Méthode qui retourne la frame parent stockée par le setter.
     */
    public Frame getPar() {
        return p;
    }

    /**
     * Méthode qui gère l'état de la checkbox "chkRemember" pour implanter la
     * fonctionnalité "se souvenir de moi" lors du login de l'utilisateur.
     */
    public void setRememberState(boolean state) {
        this.isRememberChecked = state;
        this.chkRemember.setSelected(state);
    }

    /**
     * Méthode qui retourne l'état de la checkbox "chkRemember".
     */
    public boolean getRememberState() {
        return isRememberChecked;
    }
}
